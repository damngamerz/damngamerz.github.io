<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
	<channel>
		<title>Saurav Singh</title>
		<description>Personal Blog</description>		
		<link>http://localhost:4000</link>
		<atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Phase 3 Month End Summary</title>
				        
				
					<description>&lt;p&gt;Hi Guys!, How you doing?
It’s been 4 weeks of &lt;code class=&quot;highlighter-rouge&quot;&gt;CODING PHASE-3&lt;/code&gt; and it’s evaluation time again, this is the final one. So from 21st 9:30pm, Evaluation links will become active both me and my mentor have to fill a Q &amp;amp; A form ^_^. In this blog I will be sumarizing my GSoC’2017’s work of last 2 weeks. Let’s begin!!&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The deadline of achieving the milestones set by my organization is 21st August. The big thing was &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt; now has support for automatic padding and docstring type. Which tells us about the trailing no. of blank lines before or after the docstring and also about the type of docstring it is: &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; level or &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; level. By using these, now we can have blank lines detected and fixed according to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0257/&quot;&gt;PEP-257&lt;/a&gt;. Last 2 weeks was mostly about bug fixes.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Triple quoted string literals which was ignored by &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt; was creating a bug. It’s end marker was taken as the starting of a new docstring. Seems like the patch which I submitted in &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-1&lt;/code&gt; to ignore these string literals was creating this. So I found the other way around. We now Ignore the whole &lt;code class=&quot;highlighter-rouge&quot;&gt;DocComment&lt;/code&gt; instead of ignoring it by regex(Which was the case previously). So a PR reverting the previous changes and applying a new solution was &lt;a href=&quot;https://github.com/coala/coala/pull/4632&quot;&gt;made and merged.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;There was a Java docstyle bug (you can read more about it &lt;a href=&quot;https://github.com/coala/coala/issues/4029&quot;&gt;here&lt;/a&gt;). The solution I proposed in &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-2&lt;/code&gt; was breaking a corner case. Which we thought could be fixed seperately. But it wasn’t like that. So finally we came to a conclusion that &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt; couldn’t fix docstrings if their markers are faulty. As markers are the only thing by which drives &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt; to find docstrings inside a file, we now just yield a &lt;code class=&quot;highlighter-rouge&quot;&gt;RESULT&lt;/code&gt; with beautiful message which describes that markers are faulty. So a PR reverting the previous changes and applying a new solution was &lt;a href=&quot;https://github.com/coala/coala/pull/4637&quot;&gt;made and merged&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This was it!! I have successfully achieved my milestone of &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-3&lt;/code&gt;. You can see my progress &lt;a href=&quot;https://gitlab.com/coala/GSoC-2017/milestones/11&quot;&gt;here&lt;/a&gt;. And here’s how my burndown chart looks like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/chart_phase3.png&quot; alt=&quot;bonding chart&quot; /&gt;
Yay! I did it!&lt;/p&gt;

&lt;h2 id=&quot;stretch-goal&quot;&gt;STRETCH GOAL&lt;/h2&gt;
&lt;p&gt;Yes you read it correctly. I completed one of the biggest stretch goal which I had a thought since &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-1&lt;/code&gt;. It was about giving an error handling mechanism to DocumentationAPI. So we now have &lt;code class=&quot;highlighter-rouge&quot;&gt;MalformedComment&lt;/code&gt; class which can be yielded if there is some error in parsing the docstring by DocumentationAPI. Which contains attributes like error message and line number, so these can be yielded on the bear part. A PR has been &lt;a href=&quot;https://github.com/coala/coala/pull/4637&quot;&gt;made and merged&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There’s still one more week remaining for hard deadline of August 29. I was thinking about doing some more quirks to DocGrammarBear and DocStyleBear which will polish my project and a review sprint ;) You can see all progress about stretch goals &lt;a href=&quot;https://gitlab.com/coala/GSoC-2017/milestones/44&quot;&gt;here!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There were some up and downs in &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-2&lt;/code&gt; I nearly failed the milestone. But&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Why do we fall? So we can learn to pick ourself’s up - Alfred&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;party-time&quot;&gt;PARTY TIME!!&lt;/h2&gt;
&lt;p&gt;Kudos to….Both of my mentors &lt;a href=&quot;https://github.com/SanketDG&quot;&gt;SanketDG&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/NiklasMM&quot;&gt;NiklasMM&lt;/a&gt; for achieving this milestone together. Couldn’t have done this without them. We made 2 calls a week to discuss about progress and to answer my queries one on one, which is the sole reason of this project being done in time.&lt;/p&gt;

&lt;h2 id=&quot;whats-up-next&quot;&gt;What’s up Next?&lt;/h2&gt;
&lt;p&gt;I don’t know where this journey ends. It’s feels like it had just begun and opened up a new chapter to fill ;) I will soon write another blog wrapping up about my overall GSoC journey.&lt;/p&gt;

&lt;p&gt;Till next time. See Yaa!!&lt;/p&gt;
</description>
				
				<pubDate>Sat, 19 Aug 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/Phase-3-Month-End-Summary.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/Phase-3-Month-End-Summary.html</guid>
			</item>
		
			<item>
				<title>Phase 3 Mid Month Summary</title>
				        
				
					<description>&lt;p&gt;Hey guys, It’s been 2 weeks since 2nd evaluation. And this is my &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-3&lt;/code&gt; Mid Month summary. Before I begin with the summary, I just wanna share with you guys that I nearly passed my 2nd evaluation. My bad, I wasn’t able to achieve my last issue, it turns out the issue’s solution was designing the API rather than what I proposed earlier.&lt;/p&gt;

&lt;h2 id=&quot;how-did-i-feel-about-failing-the-milestone&quot;&gt;How did I feel about failing the milestone?&lt;/h2&gt;
&lt;p&gt;It sucks!! Well at first I really got tensed what will the org. admins decide. But it turns out they understood the situation and believed in me that I will still achieve my final goal. Ofcourse! I will not let them down :) . Thanks to org. admins and my mentors for understanding why I wasn’t able to achieve it. At the end it all turned out well, I’m quite happy about how the final solution turned out to be. Also this solution is the biggest patch of my GSoC experience, which introduced 2 new features to the Documentation API. Kind of an achievement for me ^_^&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Originally! the only objective for me this month was to implement &lt;code class=&quot;highlighter-rouge&quot;&gt;DocGrammarBear&lt;/code&gt;. Which will check for grammatical errors inside the DocumentationComment’s descriptions. But most of the time I spent on clearing the issue which got a bit off-scheduled from my previous milestone.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;First, the issue was to check and fix the blank lines before and after the Documentation for &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; vs &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;. According to &lt;a href=&quot;https://www.python.org/dev/peps/pep-0257/&quot;&gt;PEP-257&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; docstrings should be followed by a blank line and &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; docstrings should never have any blank lines before of after. This issue got so stretched that I ended up implementing 2 new features to the DocumentationAPI.
    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;Automatic Padding&lt;/strong&gt;- We have a setting in DocumentationAPI which automatically tells how many lines are above and below the docstring.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Docstring Type&lt;/strong&gt;- We can detect &amp;amp; determine between docstrings, whether they are of type &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;others&lt;/code&gt;.&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;These both additions were important inorder to solve this issue perfectly. A &lt;a href=&quot;https://github.com/coala/coala/pull/4557&quot;&gt;PR has been made&lt;/a&gt; and is close to being merged.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DocGrammarBear&lt;/code&gt; which will check for grammatical errors inside the DocumentationComment’s description. &lt;a href=&quot;https://github.com/coala/coala-bears/pull/1980&quot;&gt;PR is ready&lt;/a&gt; and close to merge. Also I made an &lt;a href=&quot;https://asciinema.org/a/132564&quot;&gt;asciinema&lt;/a&gt; so you can see this bear in action.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;These were the 2 major objectives of this month. I think I can achieve my final milestone. As everything is back on schedule.&lt;/p&gt;

&lt;h2 id=&quot;whats-up-next&quot;&gt;What’s up next?&lt;/h2&gt;
&lt;p&gt;There are 2 bugs regarding DocumentationAPI which still needs be taken care of. First, Ignoring string literal solution kind of created a bug with its last marker being taken as the start of new docstring. Second, We kinda broke the corner case of all docstrings with java docstyle bug fix. Need to fix it or revert this and raise an error message. That’s it guys!&lt;/p&gt;

&lt;p&gt;Till next time! See Yaa!!&lt;/p&gt;
</description>
				
				<pubDate>Fri, 11 Aug 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/Phase-3-Mid-Month-Summary.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/Phase-3-Mid-Month-Summary.html</guid>
			</item>
		
			<item>
				<title>Phase 2 Month End Summary</title>
				        
				
					<description>&lt;p&gt;Hi Guys!, How you doing?
It’s been 4 weeks of &lt;code class=&quot;highlighter-rouge&quot;&gt;CODING PHASE-2&lt;/code&gt; and it’s evaluation time again. So from 24th 9:30pm, Evaluation links will become active both me and my mentor have to fill a Q &amp;amp; A form ^_^. So in this blog I will be sumarizing my GSoC’2017’s work of last 2 weeks. Let’s begin!!&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The deadline of achieving the milestones set by my organization is 24th July. The big thing was &lt;code class=&quot;highlighter-rouge&quot;&gt;DocBaseClass&lt;/code&gt; got merged which now takes care of extraction, parsing and diff generation of documentation. Developers now only have to inherit this class in order to work on documentation linters. Following are the issues on which I have worked upon in last 2 weeks. These are mostly bugs fixes and quirks to DocumentationAPI and DocStyleBear:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;DocStyleBear now has a setting to expand one-liners. By default it will convert all the docstrings which only have main description to one-liners. In order to expand it as multi-line docstring, you have to set &lt;code class=&quot;highlighter-rouge&quot;&gt;expand_one_liners=True&lt;/code&gt;. A patch has been implemented and &lt;a href=&quot;https://github.com/coala/coala-bears/pull/1940&quot;&gt;merged&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;DocumentationAPI was returning nothing when JavaDoctyle was written with malformed docstyle markers. We now use &lt;code class=&quot;highlighter-rouge&quot;&gt;markers.strip()&lt;/code&gt; to extract documentation. A patch has been implemented and &lt;a href=&quot;https://github.com/coala/coala/pull/4530&quot;&gt;merged&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The official standard of writing a documentation includes a blank line before and after a docstring. Hence this was important and &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt; class now has padding option to include a blank line. A patch is implemented and in &lt;a href=&quot;https://github.com/coala/coala/pull/4549&quot;&gt;review&lt;/a&gt;. I hope It will get merged before the deadline.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This was it!! Im close to achieving my milestone of &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-2&lt;/code&gt;. You can see my progress &lt;a href=&quot;https://gitlab.com/coala/GSoC-2017/milestones/10&quot;&gt;here&lt;/a&gt;. And here’s how my burndown chart looks like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/chart_phase2.png&quot; alt=&quot;bonding chart&quot; /&gt;
sweeeet!! ^_^&lt;/p&gt;

&lt;h2 id=&quot;party-time&quot;&gt;PARTY TIME!!&lt;/h2&gt;
&lt;p&gt;Kudos to….Both of my mentors &lt;a href=&quot;https://github.com/SanketDG&quot;&gt;SanketDG&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/NiklasMM&quot;&gt;NiklasMM&lt;/a&gt; for achieving this milestone together. I’m really enjoying working with them. We sometimes even have disagreements with each other about somethings :D , which always turns out to be fruitful at the end. We still have 1 more month ;) and I think we can complete this project in time.&lt;/p&gt;

&lt;h2 id=&quot;whats-up-next&quot;&gt;What’s up Next?&lt;/h2&gt;
&lt;p&gt;Next up I have to implement is DocGrammarBear which will be doing spell checking, grammar checking..etc over documentation. Also there’re some quirks and bugs related to DocStyleBear, which I will be fixing in next Coding Phase.&lt;/p&gt;

&lt;p&gt;Till next time. See Yaa!!&lt;/p&gt;
</description>
				
				<pubDate>Sun, 23 Jul 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/Phase-2-Month-End-Summary.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/Phase-2-Month-End-Summary.html</guid>
			</item>
		
			<item>
				<title>EuroPython Awesomeness</title>
				        
				
					<description>&lt;p&gt;Hi guys, It had been an awesome one week for me in Rimini, Italy. In this blog I will tell you about the moments I had at EuroPython Conference 2017. This blog will be more visualistic so brace yourself up.&lt;/p&gt;

&lt;p&gt;First of all meet my coala team. It’s because of these guys that I had been to such a wonderful conference. Made lots of friends. Had a talk with creative and likely minded people. My dream of having a beer with my GSoC mentor Niklas got fulfilled ^_^ . And later ofcourse some awesome cuisines, dinner, beer and wine ;)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/coala-team.jpg&quot; alt=&quot;coala team&quot; /&gt;
(Sebastian, Me(Saurav), Celestine , Max, Fabian &amp;amp; Alex)&lt;/p&gt;

&lt;p&gt;Oh we’re 9 people by the way. Some of them are in my later pics.&lt;/p&gt;

&lt;p&gt;When I reached at the AirBnB and opened the fridge. I found these on the very moment ^_^
It’s called the coala ritual. Well every new-comers gets a bar of chocolates. Or a piece :P if we are running out of them. You have to get your hands on those awesome chocolates &amp;lt;3
&lt;img src=&quot;http://localhost:4000/images/chocolates.jpeg&quot; alt=&quot;coala chocolates&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anyway lets move ahead, it was an awesome experience for me cause this was my first technical conference and on the first day itself, we organized Beginner’s Day Workshop. Where I was mentoring a group of people with &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt; library, Machine-Learning and Data Science stuff. It was more like of knowledge sharing session. And at the end of the day we had to share with everyone what we did/discussed the whole day. It was pretty much sweeeeet.&lt;/p&gt;

&lt;p&gt;Then at the beginning of each day we had keynote sessions. In which everyone participated. And the whole Amphitheatro was completely filled. Wanna see the crowd?&lt;/p&gt;

&lt;p&gt;Here it is.
&lt;img src=&quot;http://localhost:4000/images/crowd.jpg&quot; alt=&quot;crowd&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I kind of sticked to coala’s desk at sponsors room. Where I helped people to understand what coala was about. For some I even fired it up on there machines. And then I met a lot of sponsoring people from companies like facebook, kiwi.com, Intel etc.&lt;/p&gt;

&lt;p&gt;The most amazing guys which I met was the kiwi.com people. Met Simone Esposito and Jan Bleha.
It was my pleasure meeting them personally. And these guys were also one of the reason of making my trip to Italy affordable. They gave me flight vouchers of 200 Euros in a programme called &lt;a href=&quot;www.kiwi.com/sourcelift/&quot;&gt;Sourcelift&lt;/a&gt;. Also later that day they invited all coala people to their BEACH PARTY!! You Guys you are AWESOME ^_^&lt;/p&gt;

&lt;p&gt;Here’s a pic of Jan and me(Saurav).
&lt;img src=&quot;http://localhost:4000/images/Jan-Bleha.jpg&quot; alt=&quot;Jan Bleha&quot; /&gt;&lt;/p&gt;

&lt;p&gt;At the end of the conference day we had Lightening Talks which was the coolest part of whole EuroPython according to me. In which random people chooses their topic of interest and speak on it for 5 mins. Even I gave a talk about “A Newcomers Perspective to FOSS” where I explained about my experience of OpenSource. Which was pretty good experience for me, considering the fact that it was my first public speaking experience.&lt;/p&gt;

&lt;p&gt;Although every day was pretty tiring in the end. But guess what? we were so close to beach that I dont think of the day where we didn’t walked on the shore-line. Here’s how it looks.
&lt;img src=&quot;http://localhost:4000/images/Beach3.jpg&quot; alt=&quot;Beach3&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/images/Beach2.jpg&quot; alt=&quot;Beach2&quot; /&gt;
&lt;img src=&quot;http://localhost:4000/images/Beach1.jpg&quot; alt=&quot;Beach1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then there was the day of EuroPython Social Event ^_^ I gotta tell this, the food was just amazing. And we had lots of fun especially that drinking game with beer xD.&lt;/p&gt;

&lt;p&gt;This was one of the best group pics I have.
&lt;img src=&quot;http://localhost:4000/images/social-event.jpg&quot; alt=&quot;social event&quot; /&gt;
(Niklas, Max, Alex , Me(Saurav), Celestine, Fabian, Stefan and Lasse)&lt;/p&gt;

&lt;p&gt;Still Sebastian is missing hmm :/&lt;/p&gt;

&lt;p&gt;Anyway at the end of the week I was happy but on the same side a bit sad cause EuroPython was coming to end. Surely If I will get the same opportunity again I won’t miss it. And maybe every year from now on I will be attending EuroPython :)&lt;/p&gt;

&lt;p&gt;And lastly I want to Thank all the guys who were associated with me on this trip. I really had a good and memorable experience. See you next year :)&lt;/p&gt;

&lt;p&gt;Amoreee!!!! Bologna.&lt;/p&gt;

&lt;p&gt;Signing off till my next Blog.&lt;/p&gt;
</description>
				
				<pubDate>Sun, 23 Jul 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/journey/EuroPython-Awesomeness.html</link>
				<guid isPermaLink="true">http://localhost:4000/journey/EuroPython-Awesomeness.html</guid>
			</item>
		
			<item>
				<title>Phase 2 Mid Month Summary</title>
				        
				
					<description>&lt;p&gt;Hi guys, It’s been 2 weeks since 1st evaluation. And this is my &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-2&lt;/code&gt; Mid Month summary.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This part of GSoC I felt was the toughest and interesting. Cause it was all designing which took a mere time but I finally did it ^_^&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;In coala we have &lt;code class=&quot;highlighter-rouge&quot;&gt;BearBaseClass&lt;/code&gt; so as to create new bears and which also is the back-bone of coala-bears repo. I had to design something similar called &lt;code class=&quot;highlighter-rouge&quot;&gt;DocBaseClass&lt;/code&gt; which will take care of extraction, parsing of fixed documentation and diff generation. So it looks like this.
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DocBaseClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;extraction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fix_parse_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;diff_generation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;The main objective for this base class to exist is that. The &lt;code class=&quot;highlighter-rouge&quot;&gt;fix_parse_data()&lt;/code&gt; member function can be overided by the user according to their needs. A &lt;a href=&quot;https://github.com/coala/coala/pull/4465&quot;&gt;PR is opened&lt;/a&gt; and is currently in a review phase.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DocumetationStyleBear&lt;/code&gt; is ported to use this new &lt;code class=&quot;highlighter-rouge&quot;&gt;DocBaseClass&lt;/code&gt;. The &lt;a href=&quot;https://github.com/coala/coala-bears/pull/1928&quot;&gt;PR is opened&lt;/a&gt; and is currently waiting for the upstream merge, after which it will get reviewed.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So these were the two major changes which I had done, making about 70% completion of the milestones in my opinion. I guess this time too I will be able to achieve 100% in time.&lt;/p&gt;

&lt;h2 id=&quot;whats-up-next&quot;&gt;What’s up next?&lt;/h2&gt;
&lt;p&gt;Though my mentors agreed upon to only implement this functionality for this month. But I will be moving to bugs as there’re few in my opinion which definitely needs to be fixed. And then I will be testing this new &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationStyleBear&lt;/code&gt; over coala-repo.&lt;/p&gt;

&lt;h2 id=&quot;europython-update&quot;&gt;EuroPython Update!&lt;/h2&gt;
&lt;p&gt;Ahh It’s been a long amazing week beer, beach, a lot of tasty food and what not :P Im still in rimini, Italy and will write a blog soon after I return back to India summarizing my experience of it ^_^&lt;/p&gt;

&lt;p&gt;Till next time! See Yaa!!&lt;/p&gt;
</description>
				
				<pubDate>Sun, 16 Jul 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/Phase-2-Mid-Month-Summary.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/Phase-2-Mid-Month-Summary.html</guid>
			</item>
		
			<item>
				<title>Phase 1 Month End Summary</title>
				        
				
					<description>&lt;p&gt;Hi Guys!, How you doing?
It’s been 4 weeks of &lt;code class=&quot;highlighter-rouge&quot;&gt;CODING PHASE-I&lt;/code&gt; and it’s evaluation time. So from 26th 9:30pm, Evaluation links will become active both me and my mentor have to fill a Q &amp;amp; A form ^_^. I will tell you more about it in a while, but first I will be sumarizing my GSoC’2017’s work of last 2 weeks. So, let’s begin!!&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;The deadline of achieving the milestones set by my organization is 26th June. Following are the issues on which I have worked upon in last 2 weeks:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;In python we have triple quoted string literals. Eg:
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;dummy_variable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
This is a triple quoted string literal and is not a docstring.
&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;This needs to be ignored, as it’s not a docstring. The solution to this was pretty simple, we made sure that starting marker (i.e.&lt;code class=&quot;highlighter-rouge&quot;&gt;marker[0]&lt;/code&gt;) should only be followed by an indentation, so as to consider it a valid docstring. Hence I completed the work over this and a patch is submitted and &lt;a href=&quot;https://github.com/coala/coala/pull/4383&quot;&gt;merged&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;parse()&lt;/code&gt; member function of &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt; was breaking if we miss an ending colon in the docstring. Eg:
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;foobar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    This is a dummy function.
    
    :param param1: ending colon is present
    :param param2  ending colon is missing
    :return: nothing
    &quot;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;We first began to find a solution by adding &lt;code class=&quot;highlighter-rouge&quot;&gt;self.errors&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt;’s &lt;code class=&quot;highlighter-rouge&quot;&gt;__init__&lt;/code&gt; which will return a list of raised errors to the bear, so that it yields a &lt;code class=&quot;highlighter-rouge&quot;&gt;RESULT&lt;/code&gt; with a beautiful message. Though this worked but was not an appropriate way to handle exceptions. You might be thinking why not directly &lt;code class=&quot;highlighter-rouge&quot;&gt;raise&lt;/code&gt; an appropriate exception from the &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt;?
Well, If you look carefully about working of &lt;code class=&quot;highlighter-rouge&quot;&gt;coala&lt;/code&gt; it runs the bear as a &lt;code class=&quot;highlighter-rouge&quot;&gt;generator&lt;/code&gt; and yeilds a &lt;code class=&quot;highlighter-rouge&quot;&gt;RESULT&lt;/code&gt; if it finds something inappropiate. Our sole aim was to keep the &lt;code class=&quot;highlighter-rouge&quot;&gt;generator&lt;/code&gt; running, so if we raise an &lt;code class=&quot;highlighter-rouge&quot;&gt;Exception&lt;/code&gt; inside &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt; the generator will be terminated and &lt;code class=&quot;highlighter-rouge&quot;&gt;coala&lt;/code&gt; won’t run further to find any other docstring.
Second way was to yield something like &lt;code class=&quot;highlighter-rouge&quot;&gt;MalformedComment&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt;. This seems a good idea but it would require a lot of ideation. Also &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationExtraction&lt;/code&gt; yields &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt; and we can’t make it out anywhere just after the extraction that the docstring is malformed.
So what was the solution?
Lately, I noticed why the parser was breaking. There was an &lt;code class=&quot;highlighter-rouge&quot;&gt;IndexError&lt;/code&gt; at the position where we spitted the parameter’s name and description. So the fix was to check either for ending marker or for a space so as to split the parameter’s name and a description. And Viola!! This worked!! Although I still feel like &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt; needs to have a separate &lt;code class=&quot;highlighter-rouge&quot;&gt;Exception&lt;/code&gt; class. Anyway patch submitted and &lt;a href=&quot;https://github.com/coala/coala/pull/4407&quot;&gt;merged&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Also, 2 Issues are moved ahead to &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-II&lt;/code&gt;. We feel like it’s better to solve them after the implementation of &lt;code class=&quot;highlighter-rouge&quot;&gt;DocBaseClass()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This was it!! I achieved my milestone of &lt;code class=&quot;highlighter-rouge&quot;&gt;PHASE-I&lt;/code&gt;. You can see my progress &lt;a href=&quot;https://gitlab.com/coala/GSoC-2017/milestones/5&quot;&gt;here&lt;/a&gt;. And here’s how my burndown chart looks like.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/chart_phase1.png&quot; alt=&quot;bonding chart&quot; /&gt;
feelsgoodman!! ^_^&lt;/p&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks!!&lt;/h2&gt;
&lt;p&gt;Thanks and Congrats to…. Ofcourse, both of my mentors &lt;a href=&quot;https://github.com/SanketDG&quot;&gt;SanketDG&lt;/a&gt; &amp;amp; &lt;a href=&quot;https://github.com/NiklasMM&quot;&gt;NiklasMM&lt;/a&gt; for achieving this milestone together. We still have 2 more on the uproad to go through ;)&lt;/p&gt;

&lt;p&gt;Special Thanks to &lt;a href=&quot;https://github.com/Makman2&quot;&gt;Makman2&lt;/a&gt;. He helped me alot initially, with some of the issues and also reviewed my patches.&lt;/p&gt;

&lt;h2 id=&quot;whats-up-next&quot;&gt;What’s up next?&lt;/h2&gt;
&lt;p&gt;Next up after the evaluation is &lt;code class=&quot;highlighter-rouge&quot;&gt;CODING PHASE-II&lt;/code&gt;. In which our sole aim is to implement a &lt;code class=&quot;highlighter-rouge&quot;&gt;DocBaseClass&lt;/code&gt; and then use it in our existing &lt;code class=&quot;highlighter-rouge&quot;&gt;DocStyleBear&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;europython-update&quot;&gt;EuroPython Update.&lt;/h2&gt;
&lt;p&gt;Yass bois!! Im going to attend EP’2017. Got my VISA approved YAY!!
July is going to be one hell of a month.&lt;/p&gt;

&lt;p&gt;That’s it for today. Till next time. See yaa!!&lt;/p&gt;
</description>
				
				<pubDate>Mon, 26 Jun 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/Phase-1-Month-End-Summary.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/Phase-1-Month-End-Summary.html</guid>
			</item>
		
			<item>
				<title>EuroPython And A Lot More Awesomeness</title>
				        
				
					<description>&lt;p&gt;Hey Guys, Im pleased to tell you that I will be travelling to Italy on 2nd week of July. Im very excited about it as this would be my first foreign trip. There I will attending EuroPython’17 Conference along with my other admins/mentors of &lt;code class=&quot;highlighter-rouge&quot;&gt;coala&lt;/code&gt;. This is gonna be a long post so get ready for awesomeness!!&lt;/p&gt;

&lt;h2 id=&quot;what-exactly-is-europython-and-why-am-i-attending-it&quot;&gt;What exactly is EuroPython and why am I attending it?&lt;/h2&gt;
&lt;p&gt;EuroPython is a community initiative by a team of Python enthusiast in Europe to bring together Python users and developers, as well as provide an opportunity for those who are interested in these technologies.&lt;/p&gt;

&lt;p&gt;So around march &lt;em&gt;Lasse&lt;/em&gt; (&lt;a href=&quot;http://github.com/sils&quot;&gt;@sils&lt;/a&gt;) invited us all for this conference where since past 2 years was the venue for coalians annual meet. Although I haven’t spent a lot of time with these guys. But now it feels like I have been knowing them since years and hence, I will really be pleased to meet them all. Even my mentor of GSoC’17 &lt;em&gt;Niklas&lt;/em&gt; &lt;a href=&quot;http://github.com/NiklasMM&quot;&gt;@NiklasMM&lt;/a&gt; will be present. Yes my dream of having a beer with my mentor is coming true :P&lt;/p&gt;

&lt;p&gt;I would also like to share that I had applied for a Talk proposal on the words of my admins. Though it got rejected but Im happy. I have never been to a Tech. conference before, so I was a bit hesitant about it. But If I will get a chance surely I will give a lightening talk about my GSoC project.&lt;/p&gt;
&lt;h2 id=&quot;funding-and-sponsorship&quot;&gt;Funding and Sponsorship.&lt;/h2&gt;
&lt;p&gt;Yes guys you have read it perfectly I m being funded for this trip. Though not fully but partially and I m really thankful to the guys who are helping me to actually make this affordable. First of all Thanks to &lt;code class=&quot;highlighter-rouge&quot;&gt;Kiwi.com&lt;/code&gt; for their generosity and their amazing programme source-lift which funds open-source teams.&lt;/p&gt;
&lt;h2 id=&quot;what-is-source-lift-programme&quot;&gt;What is source-lift programme?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/kiwidotcom_source_lift.png&quot; alt=&quot;kiwidotcom source lift&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Kiwi.com is giving away flights to open source teams that need to travel!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If I can say it in one sentence. It’s their way of thanking to the world of FOSS. Source-lift programme funds Open-Source organizations to make their dream of attending a conference together come true. They do so by providing each member of the team with flight voucher upto 200 Euros. Read more about them on their official site: &lt;a href=&quot;https://www.kiwi.com/sourcelift/&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;kiwi.com/sourcelift&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coala&lt;/code&gt; is the first organization to be a part this programme. It’s was the effort of &lt;em&gt;Lasse&lt;/em&gt; (&lt;a href=&quot;http://github.com/sils&quot;&gt;@sils&lt;/a&gt;) and few other admins to make this happen. Im really Thankful to them for such an effort. Keep bringing more awesomeness to the community.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/kiwidotcom_coala.png&quot; alt=&quot;kiwidotcom coala&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So Guys here’s how the voucher looks like :) It gives me chills thinking that I m one of the first few members to get this.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/images/kiwidotcom_mail.jpg&quot; alt=&quot;kiwidotcom mail&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Also, I have heard that &lt;code class=&quot;highlighter-rouge&quot;&gt;Google&lt;/code&gt; funded some of the GSoC students last year. There haven’t been any official news about it for this year so far. And that’s what worried me mostly. But &lt;code class=&quot;highlighter-rouge&quot;&gt;kiwi.com&lt;/code&gt; made my thought clear that I would be definitely attending &lt;strong&gt;EP’2017&lt;/strong&gt;. Thanks again guys!! You’re Awesome.
So, I am all set, applied for a VISA. Hopefully It will get accepted.&lt;/p&gt;

&lt;p&gt;That’s all people. Till my next blog see yaa.&lt;/p&gt;
</description>
				
				<pubDate>Tue, 20 Jun 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/EuroPython-And-A-Lot-More-Awesomeness.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/EuroPython-And-A-Lot-More-Awesomeness.html</guid>
			</item>
		
			<item>
				<title>Phase 1 Mid Month Summary</title>
				        
				
					<description>&lt;p&gt;Hey there Guys!, I hope you are doing well. In this blog I will summarizing my GSoC’17 work till now. So it’s been 18 days of &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-I&lt;/code&gt; and I have been moving forward with all I have, to make this project come to life. So Let’s begin!&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Since, I learnt my lesson well from &lt;code class=&quot;highlighter-rouge&quot;&gt;Bonding Phase&lt;/code&gt; :P so I started solving the big issues first. As they takes up a lot of time in review phase. Firstly I began adding additional functionalities to &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt; is the core of &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt; which mainly dissociated the whole documentation into it’s sub-parts (i.e. params,exceptions and return descriptions).&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Previous &lt;code class=&quot;highlighter-rouge&quot;&gt;assemble()&lt;/code&gt; function was not accounting for a case in which middle and ending markers are same. Eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;marker[1]==marker[2]&lt;/code&gt; which is a type of case in python docstring.
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;docstring_find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;## This is dummy docstring find function.&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#  @param filename contains filename&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#  @raises FileNotFoundError raises when filename is not found&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#  @return nothing&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;Hence I completed the work over this and a patch is submitted and &lt;a href=&quot;https://github.com/coala/coala/pull/4319&quot;&gt;merged&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationComment&lt;/code&gt; accepts &lt;code class=&quot;highlighter-rouge&quot;&gt;range&lt;/code&gt; as an argument we will be shifting it to &lt;code class=&quot;highlighter-rouge&quot;&gt;position&lt;/code&gt;. Since &lt;code class=&quot;highlighter-rouge&quot;&gt;TextRange&lt;/code&gt; is constructed from &lt;code class=&quot;highlighter-rouge&quot;&gt;TextPosition&lt;/code&gt; it’s just a simplification of constructor but important indeed. A patch is currectly in the &lt;a href=&quot;https://github.com/coala/coala/issues/2646&quot;&gt;review phase&lt;/a&gt; right now. I guess it will be merged in 2 review iterations or so.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So these were the two major changes which I had done, making about 60% completion of the milestones in my opinion. I guess this time I will be able to achieve 100%. 100% or not my patches should be good in quality thats my inner objective ;)&lt;/p&gt;

&lt;p&gt;There’s one more thing, the &lt;a href=&quot;https://github.com/coala/coala-bears/pull/1506&quot;&gt;big patch&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationStyleBear&lt;/code&gt; finally got accepted. It’s not fully complete at the moment. Requires lot of additional functionalities but that’s the basic functionality which we have longed for.&lt;/p&gt;
&lt;h2 id=&quot;whats-up-ahead&quot;&gt;What’s up ahead?&lt;/h2&gt;
&lt;p&gt;Next, I have 4 additions lined up for &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationExtraction&lt;/code&gt; out of which only 2 are solvable at the moment and the rest will be moved ahead to &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-II&lt;/code&gt;. I will be writing more about them in my next blog.&lt;/p&gt;

&lt;p&gt;That’s all guys. Till next time See YAA!!&lt;/p&gt;
</description>
				
				<pubDate>Sun, 18 Jun 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/Phase-1-Mid-Month-Summary.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/Phase-1-Mid-Month-Summary.html</guid>
			</item>
		
			<item>
				<title>Bonding Period Ends</title>
				        
				
					<description>&lt;p&gt;Hi Guys!! With the end of this month &lt;code class=&quot;highlighter-rouge&quot;&gt;Community Bonding&lt;/code&gt; period finally comes to an end, which marks the beginning of &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-I&lt;/code&gt;. In which, students officially now starts coding on their projects. Before even I would start with &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-I&lt;/code&gt;, I thought about summarizing my overall objectives achieved in &lt;code class=&quot;highlighter-rouge&quot;&gt;Community Bonding&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;I started with testing the old &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationStyleBear&lt;/code&gt; over &lt;code class=&quot;highlighter-rouge&quot;&gt;coala&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;coala-bears&lt;/code&gt; repo. My first task was to get the old &lt;a href=&quot;https://github.com/coala/coala-bears/pull/1506&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DocStyleBear&lt;/code&gt; PR&lt;/a&gt; of &lt;a href=&quot;https://github.com/SanketDG&quot;&gt;SanketDG&lt;/a&gt; merged, currently! I have hijacked it :P . I found 2 major issues while testing:
    &lt;ul&gt;
      &lt;li&gt;We know python has some fancy strings which are written as:
        &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
sum= a+b+c
avg= (a+b+c)/3
&quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
        &lt;/div&gt;
        &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentionAPI&lt;/code&gt; should ignore such strings. I had a healthy discussion with my mentors about this issue and we came to a conclusion that it required some more ideation, hence being moved to &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-I&lt;/code&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt; was not having support for &lt;code class=&quot;highlighter-rouge&quot;&gt;:raises xyz:&lt;/code&gt;. Hence, it’s being successfully &lt;a href=&quot;https://github.com/coala/coala/pull/4281&quot;&gt;implemented&lt;/a&gt;. The patch right now is in review phase.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;There was bug in &lt;code class=&quot;highlighter-rouge&quot;&gt;DocumentationAPI&lt;/code&gt;, which generated cut-off diffs. For example, if a docstring is written this way:
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
 This is not a cool way to write docstrings.
    &quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;The generated diff would be.&lt;/p&gt;
    &lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&quot;
     not a cool way to write docstrings.
    &quot;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;A patch fixing this bug has been &lt;a href=&quot;https://github.com/coala/coala/pull/4275&quot;&gt;implemented and merged&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;A new parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;allow_missing_func_desc&lt;/code&gt; needs to be added which will ignore a warning message, when &lt;code class=&quot;highlighter-rouge&quot;&gt;DocStyleBear&lt;/code&gt; doesn’t finds a function description. This has also been &lt;a href=&quot;https://github.com/coala/coala-bears/pull/1506&quot;&gt;implemented&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Last and Final task was to analyze coala’s structure and write a blog about it. So, &lt;a href=&quot;https://damngamerz.github.io/gsoc/An-Insight-Into-coala's-Structure.html&quot;&gt;here it is&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;At the end here’s a burnout chart depicting my working efficiency.
&lt;img src=&quot;http://localhost:4000/images/chart_bonding.png&quot; alt=&quot;bonding chart&quot; /&gt;
Although, I wasn’t able to complete my &lt;code class=&quot;highlighter-rouge&quot;&gt;Bonding&lt;/code&gt; milestone 100%. As to close an issue, the related PR should be merged beforehand. While I got my 2 PR’s in review state. And both of those PR’s had big updates/patches, which I submitted beforehand deadline by 2 days and hence it didn’t got sufficient time to go through review phase.&lt;/p&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h2&gt;
&lt;p&gt;Well &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-I&lt;/code&gt; begins now, and I can’t risk my chances of staying behind schedule. The things I learned from &lt;code class=&quot;highlighter-rouge&quot;&gt;Community Bonding&lt;/code&gt; phase will play a very crucial role in this phase, one of which is I have to submit my patches as early as possible, cause about 60% time goes in review cycle. Ofcourse, I don’t blame the review process by that statement, cause it is very fruitful and it always polishes the PR to get merge ready. Although, I must say coala’s review process is fast, well faster than the other open-source organisations, In which a simple patch can be in review phase for months before it finally gets accepted. Here it take a day or so. But for big patches it obviously takes weeks of review iterations to actually get it merged. Kudos!! to all my fellow devs and maintainers for making this process fast!!&lt;/p&gt;

&lt;h2 id=&quot;thanks&quot;&gt;Thanks!&lt;/h2&gt;
&lt;p&gt;Special Thanks to both of my mentors &lt;a href=&quot;https://github.com/SanketDG&quot;&gt;SanketDG&lt;/a&gt;, &lt;a href=&quot;https://github.com/NiklasMM&quot;&gt;NiklasMM&lt;/a&gt; and other mentors of coala. Without them this wouldn’t have been possible. Thanks for understanding when I asked to code in &lt;code class=&quot;highlighter-rouge&quot;&gt;Bonding Period&lt;/code&gt; phase and making me code in, which really gave me a taste of how &lt;code class=&quot;highlighter-rouge&quot;&gt;Coding Phase-I&lt;/code&gt; will actually go. I will try hard to not let you guys down.&lt;/p&gt;

&lt;p&gt;Till next time Tschüss!!&lt;/p&gt;
</description>
				
				<pubDate>Wed, 31 May 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/Bonding-Period-Ends.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/Bonding-Period-Ends.html</guid>
			</item>
		
			<item>
				<title>An Insight Into coala's Structure</title>
				        
				
					<description>&lt;p&gt;Hi Guys!! Its been a long since my last post. This blog post is intended for all newcomer’s who would like to contribute to coala. So, I will give you an insight into coala’s Structure in a bit detail to actually get you started.&lt;/p&gt;

&lt;h2 id=&quot;an-insight-into-coalas-structure&quot;&gt;An Insight Into coala’s Structure.&lt;/h2&gt;
&lt;p&gt;coala’s code base can be found here at &lt;a href=&quot;https://github.com/coala/coala&quot;&gt;github&lt;/a&gt;. It’s directory tree looks like:
&lt;img src=&quot;http://localhost:4000/images/coala_tree.png&quot; alt=&quot;coala's tree&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see, this tree has 3 major parts.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;coalib&lt;/strong&gt;: Which is the homeground of coala API. This is the place where most of the important technical aspects goes.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;docs&lt;/strong&gt;: Contains generated documention of coala API, which is built and beautifully displayed over &lt;a href=&quot;http://api.coala.io&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;api.coala.io&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;tests&lt;/strong&gt;: Contains all the test files over coalib directory.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Since, &lt;code class=&quot;highlighter-rouge&quot;&gt;docs&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tests&lt;/code&gt; are established over &lt;code class=&quot;highlighter-rouge&quot;&gt;coalib&lt;/code&gt;, so &lt;code class=&quot;highlighter-rouge&quot;&gt;coalib&lt;/code&gt; is the star directory. And hence, I would be only explaining about it.&lt;/p&gt;

&lt;h2 id=&quot;coalib&quot;&gt;coalib&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coalib&lt;/code&gt; is the collection of various subpackages regarding writing, executing, editing bears, formatting, settings and much more. So let’s dig in boys!!&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coalib&lt;/code&gt; is further divided into 11 parts:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;bearlib&lt;/strong&gt;: Which contains bear utilities, &lt;code class=&quot;highlighter-rouge&quot;&gt;aspects&lt;/code&gt;’s API, &lt;code class=&quot;highlighter-rouge&quot;&gt;abstractions&lt;/code&gt; like linter bears and also &lt;code class=&quot;highlighter-rouge&quot;&gt;languages&lt;/code&gt; which contains various language definitions(such as identifying different languages with their versions) to provide unified language experience to coala.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;bears&lt;/strong&gt;: Provides the base bear class i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;LocalBear&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;GlobalBear&lt;/code&gt;. Without which bears that exists in coala-bears &lt;a href=&quot;https://github.com/coala/coala-bears&quot;&gt;repo&lt;/a&gt; wouldn’t exist.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;collecting&lt;/strong&gt;: provides collector routines which collects all bears, dependencies and file directories for coala. The collection works on the basis of 2 factors inputs provided at &lt;code class=&quot;highlighter-rouge&quot;&gt;CLI&lt;/code&gt; and at &lt;code class=&quot;highlighter-rouge&quot;&gt;.coafile&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;core&lt;/strong&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;core&lt;/code&gt; module contains the chronological order about what coala has to do with a bear. It takes care of all the step’s involved(like having a complete schedule), when a bear runs over a given file.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;misc&lt;/strong&gt;: Provides all the other utilities like &lt;code class=&quot;highlighter-rouge&quot;&gt;cachingUtilities&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;DictUtilities&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;BuildManPage&lt;/code&gt; module and &lt;code class=&quot;highlighter-rouge&quot;&gt;Shell&lt;/code&gt; module. &lt;code class=&quot;highlighter-rouge&quot;&gt;Shell&lt;/code&gt; module is the important aspect here, as it helps coala to run in an interactive shell mode.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;output&lt;/strong&gt;: Provides the API for making coala interactive with its users via &lt;code class=&quot;highlighter-rouge&quot;&gt;CLI&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;ConsoleInteraction&lt;/code&gt; module provides the utilities about user provided &lt;code class=&quot;highlighter-rouge&quot;&gt;Actions&lt;/code&gt; like &lt;code class=&quot;highlighter-rouge&quot;&gt;Show_Patch&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Apply_Patch&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Ignore_Patch&lt;/code&gt;..etc. It acts as a mediator between coala and the user, helps coala in providing the user important information by printing generated diff’s, messages, list of bears..etc.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;parsing&lt;/strong&gt;: The name itself suggests this is the &lt;code class=&quot;highlighter-rouge&quot;&gt;parsing&lt;/code&gt; module. It contains all the routines about parsing important information from a string of characters. Most of them support regex pattern matching. For example: Parsing &lt;code class=&quot;highlighter-rouge&quot;&gt;CLI&lt;/code&gt; arguments and creating sections out of it.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;processes&lt;/strong&gt;: Provides the processing utilities and routines which takes decisive actions when a bear is in running state. It has routines which works like a control centre for processes. It takes care of process execution’s tasks such as:
    &lt;ul&gt;
      &lt;li&gt;preparing a process -&amp;gt; loading files -&amp;gt; creating queues&lt;/li&gt;
      &lt;li&gt;spawn up one or more processes&lt;/li&gt;
      &lt;li&gt;yielding results from the processes&lt;/li&gt;
      &lt;li&gt;finally joining all the processes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: This section works closely with the &lt;code class=&quot;highlighter-rouge&quot;&gt;output&lt;/code&gt; section. &lt;code class=&quot;highlighter-rouge&quot;&gt;results&lt;/code&gt; provides routines like &lt;code class=&quot;highlighter-rouge&quot;&gt;Diff&lt;/code&gt; module, &lt;code class=&quot;highlighter-rouge&quot;&gt;LineDiff&lt;/code&gt; module, &lt;code class=&quot;highlighter-rouge&quot;&gt;TextRange&lt;/code&gt; module and &lt;code class=&quot;highlighter-rouge&quot;&gt;ApplyAction&lt;/code&gt;’s module(user defined actions like ApplyPatch, IgnorePatch, ResultAction and ShowPatchAction). &lt;code class=&quot;highlighter-rouge&quot;&gt;Diff&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;LineDiff&lt;/code&gt; modules are similar, they both generates a unified diff corresponding to a generated patch by coala. The only difference between them is &lt;code class=&quot;highlighter-rouge&quot;&gt;LineDiff&lt;/code&gt; generates diffs over two strings wheareas &lt;code class=&quot;highlighter-rouge&quot;&gt;Diff&lt;/code&gt; generates it over two files. When a &lt;code class=&quot;highlighter-rouge&quot;&gt;Diff&lt;/code&gt; is being generated or we have a yielded &lt;code class=&quot;highlighter-rouge&quot;&gt;Result&lt;/code&gt;, it is supplied to the &lt;code class=&quot;highlighter-rouge&quot;&gt;output&lt;/code&gt; section, which in turn is being commuted to the user.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;settings&lt;/strong&gt;: A &lt;code class=&quot;highlighter-rouge&quot;&gt;setting&lt;/code&gt; in coala consists of a key and a value. It mainly offers many conversions into common data types. It provides important modules like &lt;code class=&quot;highlighter-rouge&quot;&gt;Section&lt;/code&gt; module which holds all the set of settings and &lt;code class=&quot;highlighter-rouge&quot;&gt;ConfigurationGathering&lt;/code&gt; module which plays two important roles:
    &lt;ul&gt;
      &lt;li&gt;finds user configs(&lt;code class=&quot;highlighter-rouge&quot;&gt;.coafile&lt;/code&gt; ofcourse)&lt;/li&gt;
      &lt;li&gt;gathers configuration(such as loading configs, retrieves bears and all needed settings, saves the settings back if needed and warns about non existent targets)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;testing&lt;/strong&gt;: The last and final section is the &lt;code class=&quot;highlighter-rouge&quot;&gt;testing&lt;/code&gt;, which contains the API for bear testing. It provides &lt;code class=&quot;highlighter-rouge&quot;&gt;LocalBearTestHelper&lt;/code&gt; module which contains routines like &lt;code class=&quot;highlighter-rouge&quot;&gt;check_results&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;check_validity&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;verify_local_bear&lt;/code&gt;. These basically test a bear by doing a simple assertion test, between the given result and to the actual yielded result from the bear over a given file.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If you will dive deep enough, it’s working is even more interesting. If it sounds interesting to you as well, you can start contributing right away by following our &lt;a href=&quot;http://coala.io/newcomer&quot;&gt;newcomer’s guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Till next time see ya!!&lt;/p&gt;
</description>
				
				<pubDate>Sun, 28 May 2017 00:00:00 +0530</pubDate>
				<link>http://localhost:4000/gsoc/An-Insight-Into-coala's-Structure.html</link>
				<guid isPermaLink="true">http://localhost:4000/gsoc/An-Insight-Into-coala's-Structure.html</guid>
			</item>
		
	</channel>
</rss>
